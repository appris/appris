.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Bio::SearchIO::Writer::GbrowseGFF 3pm"
.TH Bio::SearchIO::Writer::GbrowseGFF 3pm "2021-02-03" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::SearchIO::Writer::GbrowseGFF \- Interface for outputting parsed search results in Gbrowse GFF format
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\&  use Bio::SearchIO;
\&  my $in = Bio::SearchIO\->new(\-file   => \*(Aqresult.blast\*(Aq,
\&                             \-format => \*(Aqblast\*(Aq);
\&  my $out = Bio::SearchIO\->new(\-output_format  => \*(AqGbrowseGFF\*(Aq,
\&                              \-output_cigar   => 1,
\&                              \-output_signif  => 1,
\&                              \-file           => ">result.gff");
\&  while( my $r = $in\->next_result ) {
\&    $out\->write_result($r);
\&  }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This writer produces Gbrowse flavour \s-1GFF\s0 from a Search::Result object.
.SH "AUTHOR  Mark Wilkinson"
.IX Header "AUTHOR Mark Wilkinson"
Email markw-at-illuminae-dot-com
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
Susan Miller sjmiller at email-DOT-arizon-DOT-edu
Jason Stajich jason at bioperl-dot-org
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
.PP
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and
reponsive experts will be able look at the problem and quickly
address it. Please include a thorough description of the problem
with code and data examples if at all possible.
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via
the web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object methods.
Internal methods are usually preceded with a _
.SS "new"
.IX Subsection "new"
.Vb 6
\& Title   : new
\& Usage   : my $obj = Bio::SearchIO::Writer::GbrowseGFF\->new(@args);
\& Function: Builds a new Bio::SearchIO::Writer::GbrowseGFF object
\& Returns : an instance of Bio::SearchIO::Writer::GbrowseGFF
\& Args    :  \-e_value => 10   : set e_value parsing cutoff (default undef)
\&            (note the \-e_value flag is deprecated.)
.Ve
.SS "to_string"
.IX Subsection "to_string"
.Vb 10
\& Purpose   : Produce the Gbrowse format GFF lines for a Result
\& Usage     : print $writer\->to_string( $result_obj, @args);
\& Argument  : $result_obj = A Bio::Search::Result::ResultI object
\&             \-version => 1|2|2.5|3  ; the GFF format you want to output (default 3)
\&             \-match_tag => match|cDNA_match|EST_match|translated_nucleotide_match
\&                           nucleotide_to_protein_match|nucleotide_motif
\&                           This is the SO term to be placed in GFF column 3.
\&             \-prefix => String to prefix the group by, default is EST
\&                        (see %Defaults class variable) A default can also
\&                        be set on object init
\& Returns   : String containing data for each search Result or any of its
\&           : sub\-objects (Hits and HSPs).
\& Throws    : n/a
.Ve
.SS "start_report"
.IX Subsection "start_report"
.Vb 5
\& Title   : start_report
\& Usage   : $self\->start_report()
\& Function: has no function, returns nothing
\& Returns : empty string
\& Args    : none
.Ve
.SS "end_report"
.IX Subsection "end_report"
.Vb 5
\& Title   : end_report
\& Usage   : $self\->end_report()
\& Function: has no function, returns nothing
\& Returns : empty string
\& Args    : none
.Ve
.SS "filter"
.IX Subsection "filter"
.Vb 7
\& Title   : filter
\& Usage   : $writer\->filter(\*(Aqhsp\*(Aq, \e&hsp_filter);
\& Function: Filter out either at HSP,Hit,or Result level
\& Returns : none
\& Args    : string => data type,
\&           CODE reference
\& Note    : GbrowseGFF.pm makes no changes to the default filter code
.Ve
