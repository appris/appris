.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Bio::Matrix::Mlagan 3pm"
.TH Bio::Matrix::Mlagan 3pm "2021-02-03" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Matrix::Mlagan \- A generic matrix with mlagan fields
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&  # See L<Bio::Matrix::Generic> for most methods.
\&  # These are relevant for mlagan IO:
\&  $matrix\->gap_open(\-400);
\&  $matrix\->gap_continue(\-25);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is based on Bio::Matrix::Generic, differing by storing gap_open and
gap_continue data members to allow mlagan \s-1IO\s0 (see Bio::Matrix::IO::mlagan).
(Those values are 'outside' the matrix.)
.PP
It also limits the structure to a 6x6 matrix with row & column names 'A', 'C',
\&'G', 'T', '.' and 'N'.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
.PP
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and 
reponsive experts will be able look at the problem and quickly 
address it. Please include a thorough description of the problem 
with code and data examples if at all possible.
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "AUTHOR \- Sendu Bala"
.IX Header "AUTHOR - Sendu Bala"
Email bix@sendu.me.uk
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object methods.
Internal methods are usually preceded with a _
.SS "new"
.IX Subsection "new"
.Vb 10
\& Title   : new
\& Usage   : my $obj = Bio::Matrix::Generic\->new();
\& Function: Builds a new Bio::Matrix::Generic object 
\& Returns : an instance of Bio::Matrix::Generic
\& Args    : \-values            => arrayref of arrayrefs of data initialization
\&           \-matrix_id         => id of the matrix
\&           \-matrix_name       => name of the matrix
\&           \-matrix_init_value => default value to initialize empty cells
\&           \-gap_open          => gap open penalty (int)
\&           \-gap_continue      => gap continue penalty (int)
\&
\&           NB: \-rownames and \-colnames should not be given here, since they are
\&           always being set to \*(AqA\*(Aq, \*(AqC\*(Aq, \*(AqG\*(Aq, \*(AqT\*(Aq, \*(Aq.\*(Aq and \*(AqN\*(Aq.
.Ve
.SS "gap_open"
.IX Subsection "gap_open"
.Vb 5
\& Title   : gap_open
\& Usage   : $obj\->gap_open(\-400);
\& Function: Get/set the gap open amount.
\& Returns : int
\& Args    : none to get, OR int to set
.Ve
.SS "gap_continue"
.IX Subsection "gap_continue"
.Vb 5
\& Title   : gap_continue
\& Usage   : $obj\->gap_continue(\-25);
\& Function: Get/set the gap continue amount.
\& Returns : int
\& Args    : none to get, OR int to set
.Ve
.SS "add_row"
.IX Subsection "add_row"
.Vb 6
\& Title   : add_row
\& Usage   : Do not use
\& Function: This generic method is not suitable for mlagan, where the number of
\&           rows is fixed.
\& Returns : Warning
\& Args    : none
.Ve
.SS "remove_row"
.IX Subsection "remove_row"
.Vb 6
\& Title   : remove_row
\& Usage   : Do not use
\& Function: This generic method is not suitable for mlagan, where the number of
\&           rows is fixed.
\& Returns : Warning
\& Args    : none
.Ve
.SS "add_column"
.IX Subsection "add_column"
.Vb 6
\& Title   : add_column
\& Usage   : Do not use
\& Function: This generic method is not suitable for mlagan, where the number of
\&           columns is fixed.
\& Returns : Warning
\& Args    : none
.Ve
.SS "remove_column"
.IX Subsection "remove_column"
.Vb 6
\& Title   : remove_column
\& Usage   : Do not use
\& Function: This generic method is not suitable for mlagan, where the number of
\&           columns is fixed.
\& Returns : Warning
\& Args    : none
.Ve
