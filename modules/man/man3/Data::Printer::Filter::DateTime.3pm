.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Data::Printer::Filter::DateTime 3pm"
.TH Data::Printer::Filter::DateTime 3pm "2021-01-30" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Data::Printer::Filter::DateTime \- pretty\-printing date and time objects (not just DateTime!)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
In your \f(CW\*(C`.dataprinter\*(C'\fR file:
.PP
.Vb 1
\&    filters = DateTime
.Ve
.PP
You may also customize the look and feel with the following options (defaults shown):
.PP
.Vb 2
\&    filter_datetime.show_class_name = 1
\&    filter_datetime.show_timezone   = 0
\&
\&    # you can even customize your themes:
\&    colors.datetime = #cc7a23
.Ve
.PP
That's it!
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a filter plugin for Data::Printer. It filters through several
date and time manipulation classes and displays the time (or time duration)
as a string.
.SS "Parsed Modules"
.IX Subsection "Parsed Modules"
.IP "\(bu" 4
Time::Piece, Time::Seconds
.IP "\(bu" 4
Time::Moment
.IP "\(bu" 4
DateTime,  DateTime::Duration, DateTime::Incomplete, DateTime::TimeZone
.IP "\(bu" 4
DateTime::Tiny
.IP "\(bu" 4
Date
.IP "\(bu" 4
Date::Tiny
.IP "\(bu" 4
Date::Calc::Object
.IP "\(bu" 4
Date::Handler, Date::Handler::Delta
.IP "\(bu" 4
Date::Simple
.IP "\(bu" 4
Mojo::Date
.IP "\(bu" 4
Class::Date, Class::Date::Rel
.IP "\(bu" 4
Date::Manip
.PP
If you have any suggestions for more modules or better output,
please let us know.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Data::Printer
