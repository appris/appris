.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Bio::SeqFeature::TypedSeqFeatureI 3pm"
.TH Bio::SeqFeature::TypedSeqFeatureI 3pm "2021-02-03" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::SeqFeature::TypedSeqFeatureI \- a strongly typed SeqFeature
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&   # get Sequence Features in some manner, eg
\&   # from a Sequence object
\&
\&    foreach $sf ( $seq\->get_SeqFeatures() ) {
\&        # all sequence features must have primary_tag() return a string
\&        $type_as_string = $sf\->primary_tag();
\&        if( $sf\->isa("Bio::SeqFeature::TypedSeqFeatureI") ) {
\&            $ot = $sf\->ontology_term();
\&            print "Ontology identifier:",$ot\->identifier(),
\&                  " name:",$ot\->name(),
\&                  " Description:",$ot\->description(),"\en";
\&
\&        } else {
\&            print "Sequence Feature does not have an ontology type\en";
\&        }
\&
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This interface describes the extension of SeqFeatureI 
to being a strongly typed SeqFeature.
.PP
Bio::SeqFeature::TypedSeqFeatureI extends the Bio::SeqFeatureI
interface (ie, a TypedSeqFeatureI feature must also implement
all the Bio::SeqFeatureI interface as well).
.PP
It is suggested that the \fBprimary_tag()\fR method of SeqFeatureI
return the same as the \fBontology_term()\fR\->\fBname()\fR of the OntologyTypedI
(ie, the \*(L"string\*(R" name of the ontology type is used as the primary
tag), but this should not be assumed by client code as they
are scenarios where one would like to maintain the difference.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
.PP
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and 
reponsive experts will be able look at the problem and quickly 
address it. Please include a thorough description of the problem 
with code and data examples if at all possible.
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "AUTHOR \- Ewan Birney"
.IX Header "AUTHOR - Ewan Birney"
Email \- please email the BioPerl mailing list above.
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object methods.
Internal methods are usually preceded with a _
.SS "ontology_term"
.IX Subsection "ontology_term"
.Vb 5
\&  Title   : ontology_term
\&  Usage   : my $ot = $seqfeature\->ontology_term()
\&  Returns : a Bio::Ontology::TermI compliant object
\&  Args    : none
\&  Status  : public
.Ve
.PP
This method returns the ontology term for a 
strongly typed sequence feature.
