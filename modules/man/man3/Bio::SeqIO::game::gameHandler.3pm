.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Bio::SeqIO::game::gameHandler 3pm"
.TH Bio::SeqIO::game::gameHandler 3pm "2021-02-03" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::SeqIO::game::gameHandler \-\- PerlSAX handler for game\-XML
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This modules is not used directly
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Bio::SeqIO::game::gameHandler is the top-level \s-1XML\s0 handler invoked by PerlSAX
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this
and other Bioperl modules. Send your comments and suggestions preferably
to one of the Bioperl mailing lists.
.PP
Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
.PP
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and 
reponsive experts will be able look at the problem and quickly 
address it. Please include a thorough description of the problem 
with code and data examples if at all possible.
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "AUTHOR \- Sheldon McKay"
.IX Header "AUTHOR - Sheldon McKay"
Email mckays@cshl.edu
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object
methods. Internal methods are usually preceded with a _
.SS "start_document"
.IX Subsection "start_document"
.Vb 2
\& Title   : start_document
\& Function: begin parsing the document
.Ve
.SS "end_document"
.IX Subsection "end_document"
.Vb 2
\& Title   : end_document
\& Function: finish parsing the document
.Ve
.SS "load"
.IX Subsection "load"
.Vb 5
\& Title   : load
\& Usage   : $seqs = $handler\->load
\& Function: start parsing
\& Returns : a ref to a list of sequence objects
\& Args    : an optional flag to suppress <computation_analysis> elements (not used yet)
.Ve
.SS "s_game"
.IX Subsection "s_game"
.Vb 2
\& Title   : s_game
\& Function: begin parsing game element
.Ve
.SS "e_game"
.IX Subsection "e_game"
.Vb 2
\& Title   : e_game
\& Function: process the game element
.Ve
.SS "e_seq"
.IX Subsection "e_seq"
.Vb 2
\& Title   : e_seq
\& Function: process the sequence element
.Ve
.SS "e_map_position"
.IX Subsection "e_map_position"
.Vb 2
\& Title   : e_map_position
\& Function: process the map_position element
.Ve
.SS "e_annotation"
.IX Subsection "e_annotation"
.Vb 2
\& Title   : e_annotation
\& Function: process the annotation
.Ve
