.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Bio::DB::Registry 3pm"
.TH Bio::DB::Registry 3pm "2021-02-03" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::DB::Registry \- Access to the Open Bio Database Access registry scheme
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Bio::DB::Registry();
\&
\&    $registry = Bio::DB::Registry\->new();
\&
\&    @available_services = $registry\->services;
\&
\&    $db = $registry\->get_database(\*(Aqembl\*(Aq);
\&    # $db is a Bio::DB::SeqI implementing class
\&
\&    $seq = $db\->get_Seq_by_acc("J02231");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides access to the Open Bio Database Access (\s-1OBDA\s0)
scheme, which provides a single cross-language and cross-platform
specification of how to get to databases. These databases may be
accessible through the Web, they may be BioSQL databases, or
they may be local, indexed flatfile databases.
.PP
If the user or system administrator has not installed the default init
file, seqdatabase.ini, in /etc/bioinformatics or ${\s-1HOME\s0}/.bioinformatics
then creating the first Registry object copies the default settings from
the www.open\-bio.org. The Registry object will attempt to store these
settings in a new file, ${\s-1HOME\s0}/.bioinformatics/seqdatabase.ini.
.PP
Users can specify one or more custom locations for the init file by
setting \f(CW$OBDA_SEARCH_PATH\fR to those directories, where multiple
directories should be separated by ';'.
.PP
Please see the \s-1OBDA\s0 Access \s-1HOWTO\s0 for more information
(<http://bioperl.org/howtos/OBDA_HOWTO.html>).
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
.PP
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and
reponsive experts will be able look at the problem and quickly
address it. Please include a thorough description of the problem
with code and data examples if at all possible.
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
the bugs and their resolution. Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object
methods. Internal methods are usually preceded with a _
.SS "_load_registry"
.IX Subsection "_load_registry"
.Vb 7
\& Title   : _load_registry
\& Usage   :
\& Function: Looks for seqdatabase.ini files in the expected locations and
\&           in the directories specified by $OBDA_SEARCH_PATH. If no files
\&           are found download a default file from www.open\-bio.org
\& Returns : nothing
\& Args    : none
.Ve
.SS "get_database"
.IX Subsection "get_database"
.Vb 5
\& Title   : get_database
\& Usage   : my $db = $registry\->get_database($dbname);
\& Function: Retrieve a Database object which implements Bio::DB::SeqI interface
\& Returns : Bio::DB::SeqI object
\& Args    : string describing the name of the database
.Ve
.SS "services"
.IX Subsection "services"
.Vb 5
\& Title   : services
\& Usage   : my @available = $registry\->services();
\& Function: returns list of possible services
\& Returns : list of strings
\& Args    : none
.Ve
.SS "_get_ini_files"
.IX Subsection "_get_ini_files"
.Vb 5
\& Title   : _get_ini_files
\& Usage   : my @files = $self\->_get_ini_files
\& Function: To find all the seqdatabase.ini files
\& Returns : list of seqdatabase.ini paths
\& Args    : None
.Ve
.SS "_make_private_registry"
.IX Subsection "_make_private_registry"
.Vb 5
\& Title   : _make_private_registry
\& Usage   :
\& Function: Make private registry in file in $HOME
\& Returns : Path to private registry file
\& Args    : None
.Ve
