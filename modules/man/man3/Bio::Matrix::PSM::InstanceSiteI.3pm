.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Bio::Matrix::PSM::InstanceSiteI 3pm"
.TH Bio::Matrix::PSM::InstanceSiteI 3pm "2021-02-03" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Matrix::PSM::InstanceSiteI \- InstanceSite interface, holds an instance of a PSM
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\&  use Bio::Matrix::PSM::InstanceSite;
\&  #Y ou can get an InstanceSite object either from a file:
\&  my ($instances,$matrix)=$SomePSMFile\->parse_next;
\&  #or from memory
\&  my %params=(seq       => \*(AqTATAAT\*(Aq,
\&              id        => "TATAbox1", 
\&              accession => \*(AqENSG00000122304\*(Aq, 
\&              mid       => \*(AqTB1\*(Aq,
\&              desc      => \*(AqTATA box, experimentally verified in PRM1 gene\*(Aq,
\&              relpos    => \-35);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Abstract interface to \s-1PSM\s0 site occurrence (\s-1PSM\s0 sequence
match). InstanceSite objects may be used to describe a \s-1PSM\s0 (See
Bio::Matrix::PSM::SiteMatrix) sequence matches.  The usual
characteristic of such a match is sequence coordinates, score,
sequence and sequence (gene) identifier\- accession number or other
id. This object inherits from Bio::LocatableSeq (which defines the
real sequence) and might hold a SiteMatrix object, used to detect the
\&\s-1CRE\s0 (cis-regulatory element), or created from this \s-1CRE.\s0  While the
documentation states that the motif id and gene id (accession)
combination should be unique, this is not entirely true\- there might
be more than one occurrence of the same cis-regulatory element in the
upstream region of the same gene.  Therefore relpos would be the third
element to create a really unique combination.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to one
of the Bioperl mailing lists.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
.PP
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and 
reponsive experts will be able look at the problem and quickly 
address it. Please include a thorough description of the problem 
with code and data examples if at all possible.
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
the bugs and their resolution.  Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "AUTHOR \- Stefan Kirov"
.IX Header "AUTHOR - Stefan Kirov"
Email skirov@utk.edu
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Bio::Matrix::PSM::SiteMatrix, Bio::Matrix::PSM::Psm, Bio::Matrix::PSM::IO
.SH "APPENDIX"
.IX Header "APPENDIX"
.SS "mid"
.IX Subsection "mid"
.Vb 6
\& Title   : mid
\& Usage   : my $mid=$instance\->mid;
\& Function: Get/Set the motif id
\& Throws  :
\& Returns : scalar
\& Args    : scalar
.Ve
.SS "score"
.IX Subsection "score"
.Vb 7
\& Title   : score
\& Usage   : my $score=$instance\->score;
\& Function: Get/Set the score (mismatches) between the instance and the attached (or
\&            initial) PSM
\& Throws  :
\& Returns : real number
\& Args    : real number
.Ve
.SS "start"
.IX Subsection "start"
.Vb 6
\& Title   : start
\& Usage   : my $start=$instance\->start;
\& Function: Get/Set the position of the instance on the sequence used
\& Throws  :
\& Returns : integer
\& Args    : integer
.Ve
.SS "relpos"
.IX Subsection "relpos"
.Vb 7
\& Title   : relpos
\& Usage   : my $seqpos=$instance\->relpos;
\& Function: Get/Set the relative position of the instance with respect to the transcription start
\&            site (if known). Can and usually is negative.
\& Throws  :
\& Returns : integer
\& Args    : integer
.Ve
.SS "minstance"
.IX Subsection "minstance"
.Vb 7
\& Title   : minstance
\& Usage   : my $minstance=$misntance\->score;
\& Function: Get/Set the unique identifier\- sequence id/motif id, for example PRM1_TATAbox.
\&          Not necessarily human readable.
\& Throws  :
\& Returns : string
\& Args    : string
.Ve
