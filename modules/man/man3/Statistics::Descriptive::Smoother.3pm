.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Statistics::Descriptive::Smoother 3"
.TH Statistics::Descriptive::Smoother 3 "2022-06-28" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Statistics::Descriptive::Smoother \- Base module for smoothing statistical data
.SH "VERSION"
.IX Header "VERSION"
version 3.0800
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 8
\&  use Statistics::Descriptive::Smoother;
\&  my $smoother = Statistics::Descriptive::Smoother\->instantiate({
\&           method   => \*(Aqexponential\*(Aq,
\&           coeff    => 0.5,
\&           data     => [1, 2, 3, 4, 5],
\&           samples  => [110, 120, 130, 140, 150],
\&    });
\&  my @smoothed_data = $smoother\->get_smoothed_data();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provide methods to smooth the trend of a series of statistical data.
.PP
The methods provided are the \f(CW\*(C`Exponential\*(C'\fR and the \f(CW\*(C`Weighted Exponential\*(C'\fR (see respectively
\&\f(CW\*(C`Statistics::Descriptive::Smoother::Exponential\*(C'\fR and \f(CW\*(C`Statistics::Descriptive::Smoother::Weightedexponential\*(C'\fR
for more details).
.PP
This class is just a factory that will instantiate the object to perform the
chosen smoothing algorithm.
.SH "METHODS"
.IX Header "METHODS"
.IP "Statistics::Descriptive::Smoother\->instantiate({});" 5
.IX Item "Statistics::Descriptive::Smoother->instantiate({});"
Create a new Smoother object.
.Sp
This method require several parameters:
.RS 5
.IP "method" 5
.IX Item "method"
Method used for the smoothing. Allowed values are: \f(CW\*(C`exponential\*(C'\fR and \f(CW\*(C`weightedexponential\*(C'\fR
.IP "coeff" 5
.IX Item "coeff"
Smoothing coefficient. It needs to be in the [0;1] range, otherwise undef will be reutrned.
\&\f(CW0\fR means that the series is not smoothed at all, while \f(CW1\fR the series is universally equal to the initial unsmoothed value.
.IP "data" 5
.IX Item "data"
Array ref with the data of the series. At least 2 values are needed to smooth the series, undef is returned otherwise.
.IP "samples" 5
.IX Item "samples"
Array ref with the samples each data value has been built with. This is an optional parameter since it is not used by all the
smoothing algorithm.
.RE
.RS 5
.RE
.ie n .IP "$smoother\->\fBget_smoothing_coeff()\fR;" 5
.el .IP "\f(CW$smoother\fR\->\fBget_smoothing_coeff()\fR;" 5
.IX Item "$smoother->get_smoothing_coeff();"
Returns the smoothing coefficient.
.ie n .IP "$smoother\->set_smoothing_coeff(0.5);" 5
.el .IP "\f(CW$smoother\fR\->set_smoothing_coeff(0.5);" 5
.IX Item "$smoother->set_smoothing_coeff(0.5);"
Set the smoothing coefficient value. It needs to be in the [0;1] range, otherwise undef will be reutrned.
.SH "AUTHOR"
.IX Header "AUTHOR"
Fabio Ponciroli
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright(c) 2012 by Fabio Ponciroli.
.SH "LICENSE"
.IX Header "LICENSE"
This file is licensed under the \s-1MIT/X11\s0 License:
http://www.opensource.org/licenses/mit\-license.php.
.PP
Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the \*(L"Software\*(R"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
.PP
\&\s-1THE SOFTWARE IS PROVIDED \*(L"AS IS\*(R", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.\s0
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "Websites"
.IX Subsection "Websites"
The following websites have more information about this module, and may be of help to you. As always,
in addition to those websites please use your favorite search engine to discover more resources.
.IP "\(bu" 4
MetaCPAN
.Sp
A modern, open-source \s-1CPAN\s0 search engine, useful to view \s-1POD\s0 in \s-1HTML\s0 format.
.Sp
<https://metacpan.org/release/Statistics\-Descriptive>
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's Bug Tracker
.Sp
The \s-1RT\s0 ( Request Tracker ) website is the default bug/issue tracking system for \s-1CPAN.\s0
.Sp
<https://rt.cpan.org/Public/Dist/Display.html?Name=Statistics\-Descriptive>
.IP "\(bu" 4
\&\s-1CPANTS\s0
.Sp
The \s-1CPANTS\s0 is a website that analyzes the Kwalitee ( code metrics ) of a distribution.
.Sp
<http://cpants.cpanauthors.org/dist/Statistics\-Descriptive>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers
.Sp
The \s-1CPAN\s0 Testers is a network of smoke testers who run automated tests on uploaded \s-1CPAN\s0 distributions.
.Sp
<http://www.cpantesters.org/distro/S/Statistics\-Descriptive>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers Matrix
.Sp
The \s-1CPAN\s0 Testers Matrix is a website that provides a visual overview of the test results for a distribution on various Perls/platforms.
.Sp
<http://matrix.cpantesters.org/?dist=Statistics\-Descriptive>
.IP "\(bu" 4
\&\s-1CPAN\s0 Testers Dependencies
.Sp
The \s-1CPAN\s0 Testers Dependencies is a website that shows a chart of the test results of all dependencies for a distribution.
.Sp
<http://deps.cpantesters.org/?module=Statistics::Descriptive>
.SS "Bugs / Feature Requests"
.IX Subsection "Bugs / Feature Requests"
Please report any bugs or feature requests by email to \f(CW\*(C`bug\-statistics\-descriptive at rt.cpan.org\*(C'\fR, or through
the web interface at <https://rt.cpan.org/Public/Bug/Report.html?Queue=Statistics\-Descriptive>. You will be automatically notified of any
progress on the request by the system.
.SS "Source Code"
.IX Subsection "Source Code"
The code is open to the world, and available for you to hack on. Please feel free to browse it and play
with it, or whatever. If you want to contribute patches, please send me a diff or prod me to pull
from your repository :)
.PP
<https://github.com/shlomif/perl\-Statistics\-Descriptive>
.PP
.Vb 1
\&  git clone git://github.com/shlomif/perl\-Statistics\-Descriptive.git
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Shlomi Fish <shlomif@cpan.org>
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests on the bugtracker website
<https://github.com/shlomif/perl\-Statistics\-Descriptive/issues>
.PP
When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 1997 by Jason Kastner, Andrea Spinelli, Colin Kuskie, and others.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
