.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Bio::OntologyIO::Handlers::BaseSAXHandler 3pm"
.TH Bio::OntologyIO::Handlers::BaseSAXHandler 3pm "2021-02-03" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::OntologyIO::Handlers::BaseSAXHandler \- base class for SAX Handlers
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
See description.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is an abstract module, serving as the base of any \s-1SAX\s0 Handler
implementation. It tries to offer the framework that \s-1SAX\s0 handlers generally
need, such as tag_stack, char_store, etc.
.PP
In the implementation handler, you can take advantage of this based module by
the following suggestions.
.PP
1) In start_element,
.PP
.Vb 5
\& sub start_element {
\&     my $self=shift;
\&     my $tag=$_[0]\->{Name};
\&     my %args=%{$_[0]\->{Attributes}};
\&     # Your code here.
\&
\&     # Before you conclude the method, write these 2 line.
\&     $self\->_visited_count_inc($tag);
\&     $self\->_push_tag($tag);
\& }
.Ve
.PP
2) In end_element,
.PP
.Vb 4
\& sub end_element {
\&     my $self=shift;
\&     my $tag=shift\->{Name};
\&     # Your code here.
\&
\&     # Before you conclude the method, write these 2 lines.
\&     $self\->_visited_count_dec($tag);
\&     $self\->_pop_tag;
\& }
.Ve
.PP
3) In characters, or any other methods where you may use the tag
stack or count
.PP
.Vb 3
\& sub characters {
\&     my $self=shift;
\&     my $text=shift\->{Data};
\&
\&     $self\->_chars_hash\->{$self\->_top_tag} .= $text;
\&
\& }
\& $count = $self\->_visited_count(\*(AqmyTag\*(Aq);
\& $tag = $self\->_top_tag;
.Ve
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to one
of the Bioperl mailing lists.
.PP
Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
.PP
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and
reponsive experts will be able look at the problem and quickly
address it. Please include a thorough description of the problem
with code and data examples if at all possible.
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
the bugs and their resolution.  Bug reports can be submitted via the
web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Juguang Xiao, juguang@tll.org.sg
.SS "\s-1APPENDIX\s0"
.IX Subsection "APPENDIX"
The rest of the documentation details each of the object methods.
Internal methods are usually preceded with a _
.SS "_tag_stack"
.IX Subsection "_tag_stack"
.Vb 5
\&  Title   : _tag_stack
\&  Usage   : @tags = $self\->_tag_stack;
\&  Function: Get an array of tags that have been accessed but not enclosed.
\&  Return  :
\&  Args    :
.Ve
.SS "_push_tag"
.IX Subsection "_push_tag"
.SS "_pop_tag"
.IX Subsection "_pop_tag"
.SS "_top_tag"
.IX Subsection "_top_tag"
.Vb 5
\&  Title   : _top_tag
\&  Usage   : $top = $self\->_top_tag;
\&  Function: get the top tag in the tag stack.
\&  Return  : a tag name
\&  Args    : [none]
.Ve
.SS "_chars_hash"
.IX Subsection "_chars_hash"
.Vb 5
\&  Title   : _chars_hash
\&  Usage   : $hash= $self\->_chars_hash;
\&  Function: return the character cache for the specific tag
\&  Return  : a hash reference, which is intent for character storage for tags
\&  Args    : [none]
.Ve
.SS "_current_hash"
.IX Subsection "_current_hash"
.SS "_visited_count_inc"
.IX Subsection "_visited_count_inc"
.Vb 5
\&  Title   : _vistied_count_inc
\&  Usage   : $self\->vistied_count_inc($tag); # the counter for the tag increase
\&  Function: the counter for the tag increase
\&  Return  : the current count after this increment
\&  Args    : the tag name [scalar]
.Ve
.SS "_visited_count_dec"
.IX Subsection "_visited_count_dec"
.Vb 5
\&  Title   : _visited_count_dec
\&  Usage   : $self\->_visited_count_dec($tag);
\&  Function: the counter for the tag decreases by one
\&  Return  : the current count for the specific tag after the decrement
\&  Args    : the tag name [scalar]
.Ve
.SS "_visited_count"
.IX Subsection "_visited_count"
.Vb 5
\&  Title   : _visited_count
\&  Usage   : $count = $self\->_visited_count
\&  Function: return the counter for the tag
\&  Return  : the current counter for the specific tag
\&  Args    : the tag name [scalar]
.Ve
